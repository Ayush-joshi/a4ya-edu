@import '../../../styles/colors';

/* app container */
.sidebar {
  @include themed-bg('&', $surface, $surface-dark);
  border-color: $outline;
  @media (prefers-color-scheme: dark) { border-color: $outline-dark; }
}

/* normalize first/last padding so the first row doesn't look offset */
:host ::ng-deep .normalize-list.mat-mdc-list-base {
  padding-block: 0.25rem; // 4px
}

/* toggle button sits outside, adjusts with width */
.toggle-btn {
  position: absolute;
  top: -0.25rem;
  right: -1.2rem;
  
  box-shadow: $shadow-lg;
  @media (prefers-color-scheme: dark) { box-shadow: $shadow-lg-dark; }
}

/* unified row layout */
.row {
  display: flex;
  align-items: center;
  gap: 0.75rem;            // 12px
  height: 2.5rem;          // 40px
  margin: 0.125rem 0.5rem; // y 2px, x 8px
  border-radius: 0 $radius $radius 0; // curved right, straight left
  padding-inline: 0.5rem;
  @include themed-color('&', $text, $text-dark);

  &:hover {
    background-color: mix($surface-variant, $elevated, 85%);
    .label {
      color: #ffffff; // almost pure white
    }
     .leading mat-icon {
      color: #ffffff; // light mode hover
    }
    @media (prefers-color-scheme: dark) {
      background-color: mix($surface-variant-dark, $elevated-dark, 72%);
    }
  }

  &.active {
    background-color: mix($primary-500, $elevated, 14%);
    color: $text; // readable on light
    @media (prefers-color-scheme: dark) {
      background-color: mix($primary-600-dark, $elevated-dark, 22%);
      color: $text-dark;   // readable on dark
    }
    mat-icon { color: inherit; }
  }
}

/* fixed leading column for perfect icon/label alignment */
.leading {
  width: 1.5rem;      // 24px
  display: inline-flex;
  align-items: center;
  justify-content: center;

  mat-icon { font-size: 1.125rem; line-height: 1; 
    position: relative; top: 3px; // 2px adjustment for vertical centering
  }
}

/* label column */
.label {
  flex: 1 1 auto;
  min-width: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* children: always visible; simpler state */
.children {
  margin-left: 1.5rem;  // equals .leading width
  padding-left: 0.5rem;
  border-left: 0.125rem solid $outline;
  @media (prefers-color-scheme: dark) { border-left-color: $outline-dark; }

  .child {
    height: 2.25rem;    // 36px
    border-radius: 0 $radius $radius 0;
    &:hover {
      .leading .dash{
      background-color: #ffffff; // light mode hover
    }
      background-color: mix($surface-variant, $elevated, 90%);
      @media (prefers-color-scheme: dark) {
        background-color: mix($surface-variant-dark, $elevated-dark, 78%);
      }
    }
  }

  /* child selected: text/icon tint only */
  .child-active {
    color: $primary-700;
    @media (prefers-color-scheme: dark) { color: $primary-600-dark; }
    .leading .dash { background-color: currentColor; }
  }

  .dash {
    display: inline-block;
    width: 1rem;      // 16px dash
    height: 0.125rem; // 2px
    border-radius: 0.125rem;
    background-color: $outline;
    @media (prefers-color-scheme: dark) { background-color: $outline-dark; }
  }
}

/* collapsed rail */
.rail-group {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;        // 8px
  padding: 0.25rem 0;
}

.rail-icon {
  display: flex;
  justify-content: center;
  height: 2.5rem;
  border-radius: 0.75rem;
  &:hover {
    mat-icon {
      color: #ffffff; // light mode hover
    }
    background-color: mix($surface-variant, $elevated, 85%);
    @media (prefers-color-scheme: dark) {
      background-color: mix($surface-variant-dark, $elevated-dark, 72%);
    }
  }
  &.active { // parent selected (when any child active)
    background-color: mix($primary-500, $elevated, 14%);
    @media (prefers-color-scheme: dark) {
      background-color: mix($primary-600-dark, $elevated-dark, 22%);
    }
    color: $on-primary;
  }
}

.child-dots {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.375rem;      // 6px
}

.dot {
  width: 0.375rem; height: 0.375rem; border-radius: 9999rem;
  background-color: $outline;
  transition: transform 120ms ease, background-color 120ms ease;
  &:hover { transform: scale(1.2); background-color: $primary-500; }
  &.dot-active { background-color: $primary-600; }
  @media (prefers-color-scheme: dark) {
    &:hover { background-color: $primary-600-dark; }
    &.dot-active { background-color: $primary-600-dark; }
  }
}
