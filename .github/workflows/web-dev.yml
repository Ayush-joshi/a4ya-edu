name: web-dev

on:
  push:
    branches: [dev]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          # Cache both possible lockfile locations (root or app)
          cache-dependency-path: |
            package-lock.json
            apps/web/package-lock.json

      - name: Install dependencies (prefer ci, auto-fix if out of sync)
        working-directory: apps/web
        run: |
          set -e
          if [ -f package-lock.json ]; then
            echo "Attempting npm ci..."
            # If lockfile is out of sync, fall back to npm install
            npm ci || (echo "npm ci failed, running npm install to resync lockfile" && npm install --no-audit --no-fund)
          else
            echo "No package-lock.json, running npm install to generate one..."
            npm install --no-audit --no-fund
          fi

      - name: Inject runtime config (text file)
        run: |
          mkdir -p apps/web/src/assets
          echo '{ "gatewayUrl": "${{ vars.GATEWAY_URL }}" }' > apps/web/src/assets/runtime-config.json

      - name: Build with base-href
        working-directory: apps/web
        run: npm run build -- --base-href "/${{ github.event.repository.name }}/"

      - name: Locate dist folder
        id: dist
        run: |
          set -e
          echo "Searching for index.html under apps/web/dist ..."
          CANDIDATES=$(find apps/web/dist -type f -name index.html 2>/dev/null | sort || true)
          echo "Found:"
          echo "$CANDIDATES"
          DIST_DIR=$(dirname "$(echo "$CANDIDATES" | head -n1)")
          if [ -z "$DIST_DIR" ]; then
            echo "No index.html found under apps/web/dist"
            exit 1
          fi
          echo "DIST_DIR=$DIST_DIR" >> "$GITHUB_OUTPUT"

      - name: Debug dist tree
        run: |
          echo "Resolved DIST_DIR: ${{ steps.dist.outputs.DIST_DIR }}"
          echo "Tree:"
          ls -laR "${{ steps.dist.outputs.DIST_DIR }}" || true

      - name: Add SPA 404
        run: cp "${{ steps.dist.outputs.DIST_DIR }}/index.html" "${{ steps.dist.outputs.DIST_DIR }}/404.html"

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.dist.outputs.DIST_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
