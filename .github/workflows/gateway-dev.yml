name: "gateway: deploy (dev)"
on:
  push:
    branches: ["dev"]
concurrency:
  group: gateway-dev-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - run: npm i -g wrangler



      - name: Put Worker secret (AI_API_KEY_PRIMARY)
        working-directory: apps/gateway-worker
        run: |
          printf %s "${AI_API_KEY_PRIMARY}" | wrangler secret put AI_API_KEY_PRIMARY --name gateway-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          AI_API_KEY_PRIMARY: ${{ secrets.AI_API_KEY_PRIMARY }}

      - name: Deploy with Wrangler (push runtime vars)
        working-directory: apps/gateway-worker
        run: >
          wrangler deploy
          --name gateway-worker
          --var AI_PROVIDER_PRIMARY=${{ vars.AI_PROVIDER_PRIMARY }}
          --var AI_ACCOUNT_ID_PRIMARY=${{ vars.AI_ACCOUNT_ID_PRIMARY }}
          --var ALLOWED_ORIGINS="${{ vars.ALLOWED_ORIGINS }}"
          --var GATEWAY_PUBLIC_KEY=${{ secrets.GATEWAY_PUBLIC_KEY }}
          --var GIT_SHA=${{ github.sha }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Wrangler whoami + vars
        working-directory: apps/gateway-worker
        run: |
          wrangler whoami
          wrangler vars list --name gateway-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Wrangler secret list
        working-directory: apps/gateway-worker
        run: wrangler secret list --name gateway-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Summary
        run: |
          echo "## Deployed gateway (dev)" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: $GITHUB_REF_NAME" >> $GITHUB_STEP_SUMMARY
          echo "- Worker path: apps/gateway-worker" >> $GITHUB_STEP_SUMMARY
