name: "gateway: deploy (dev)"
on:
  push:
    branches: ["dev"]
concurrency:
  group: gateway-dev-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Wrangler
        run: npm i -g wrangler

      # Debug: show what we intend to pass
      - name: Debug vars (pre-deploy)
        run: |
          echo "AI_PROVIDER_PRIMARY=${AI_PROVIDER_PRIMARY}"
          echo "AI_ACCOUNT_ID_PRIMARY=${AI_ACCOUNT_ID_PRIMARY}"
          echo "AI_MODEL_CHAT_PRIMARY=${AI_MODEL_CHAT_PRIMARY}"
          echo "AI_MODEL_EMBEDDINGS_PRIMARY=${AI_MODEL_EMBEDDINGS_PRIMARY}"
          echo "ALLOWED_ORIGINS=${ALLOWED_ORIGINS}"
        env:
          AI_PROVIDER_PRIMARY: ${{ vars.AI_PROVIDER_PRIMARY }}
          AI_ACCOUNT_ID_PRIMARY: ${{ vars.AI_ACCOUNT_ID_PRIMARY }}
          AI_MODEL_CHAT_PRIMARY: ${{ vars.AI_MODEL_CHAT_PRIMARY }}
          AI_MODEL_EMBEDDINGS_PRIMARY: ${{ vars.AI_MODEL_EMBEDDINGS_PRIMARY }}
          ALLOWED_ORIGINS: ${{ vars.ALLOWED_ORIGINS }}

      # Put secret on EXACT SAME script name we deploy
      - name: Put Worker secret
        working-directory: apps/gateway-worker
        run: |
          printf %s "${AI_API_KEY_PRIMARY}" | wrangler secret put AI_API_KEY_PRIMARY --name gateway-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          AI_API_KEY_PRIMARY: ${{ secrets.AI_API_KEY_PRIMARY }}

      # Deploy with explicit --var flags (binds runtime vars)
      - name: Deploy with runtime vars
        working-directory: apps/gateway-worker
        run: >
          wrangler deploy
          --name gateway-worker
          --var AI_PROVIDER_PRIMARY=${{ vars.AI_PROVIDER_PRIMARY }}
          --var AI_ACCOUNT_ID_PRIMARY=${{ vars.AI_ACCOUNT_ID_PRIMARY }}
          --var AI_MODEL_CHAT_PRIMARY=${{ vars.AI_MODEL_CHAT_PRIMARY }}
          --var AI_MODEL_EMBEDDINGS_PRIMARY=${{ vars.AI_MODEL_EMBEDDINGS_PRIMARY }}
          --var ALLOWED_ORIGINS="${{ vars.ALLOWED_ORIGINS }}"
          --var GATEWAY_PUBLIC_KEY=${{ secrets.GATEWAY_PUBLIC_KEY }}
          --var GIT_SHA=${{ github.sha }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # Show which URL is live (must use THIS in tests)
      - name: Wrangler info
        working-directory: apps/gateway-worker
        run: |
          wrangler whoami
          wrangler deployments list --name gateway-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # Hard verify: call /version and fail if unset
      - name: Verify /version bindings
        run: |
          set -e
          URL="https://gateway-worker.${{ vars.AI_ACCOUNT_ID_PRIMARY }}.workers.dev/version"
          echo "Checking $URL"
          body=$(curl -sf "$URL")
          echo "$body"
          # very light check; tighten if you want
          echo "$body" | grep -q '"provider":"cloudflare-workers-ai"' || (echo "provider not bound" && exit 1)
